import{Q as M,e as P,h as I,f as E,g as z,t as Q,k as a,m as B,n as D,r as d,o as S,q as k,s as F,j as O,v as j,p as y}from"./client-DoPm94GZ.js";var q=class extends M{constructor(e,t){super(e,t)}bindMethods(){super.bindMethods(),this.fetchNextPage=this.fetchNextPage.bind(this),this.fetchPreviousPage=this.fetchPreviousPage.bind(this)}setOptions(e,t){super.setOptions({...e,behavior:P()},t)}getOptimisticResult(e){return e.behavior=P(),super.getOptimisticResult(e)}fetchNextPage(e){return this.fetch({...e,meta:{fetchMore:{direction:"forward"}}})}fetchPreviousPage(e){return this.fetch({...e,meta:{fetchMore:{direction:"backward"}}})}createResult(e,t){const{state:r}=e,s=super.createResult(e,t),{isFetching:i,isRefetching:c,isError:o,isRefetchError:b}=s,u=r.fetchMeta?.fetchMore?.direction,h=o&&u==="forward",l=i&&u==="forward",g=o&&u==="backward",f=i&&u==="backward";return{...s,fetchNextPage:this.fetchNextPage,fetchPreviousPage:this.fetchPreviousPage,hasNextPage:E(t,r.data),hasPreviousPage:I(t,r.data),isFetchNextPageError:h,isFetchingNextPage:l,isFetchPreviousPageError:g,isFetchingPreviousPage:f,isRefetchError:b&&!h&&!g,isRefetching:c&&!l&&!f}}};function _(e,t){return z(e,q)}var R=Q({slots:{base:["relative","inline-flex","shrink-0"],badge:["flex","z-10","flex-wrap","absolute","box-border","rounded-full","whitespace-nowrap","place-content-center","origin-center","items-center","text-inherit","select-none","font-regular","scale-100","opacity-100","subpixel-antialiased","data-[invisible=true]:scale-0","data-[invisible=true]:opacity-0"]},variants:{variant:{solid:{},flat:{},faded:{badge:"border-medium"},shadow:{}},color:{default:{},primary:{},secondary:{},success:{},warning:{},danger:{}},size:{sm:{badge:"px-1 text-tiny"},md:{badge:"px-1 text-small"},lg:{badge:"px-1 text-small"}},placement:{"top-right":{},"top-left":{},"bottom-right":{},"bottom-left":{}},shape:{circle:{},rectangle:{}},isInvisible:{true:{}},isOneChar:{true:{badge:"px-0"}},isDot:{true:{}},disableAnimation:{true:{badge:"transition-none"},false:{badge:"transition-transform-opacity !ease-soft-spring !duration-300"}},showOutline:{true:{badge:"border-2 border-background"},false:{badge:"border-transparent border-0"}}},defaultVariants:{variant:"solid",color:"default",size:"md",shape:"rectangle",placement:"top-right",showOutline:!0,isInvisible:!1},compoundVariants:[{variant:"solid",color:"default",class:{badge:a.solid.default}},{variant:"solid",color:"primary",class:{badge:a.solid.primary}},{variant:"solid",color:"secondary",class:{badge:a.solid.secondary}},{variant:"solid",color:"success",class:{badge:a.solid.success}},{variant:"solid",color:"warning",class:{badge:a.solid.warning}},{variant:"solid",color:"danger",class:{badge:a.solid.danger}},{variant:"shadow",color:"default",class:{badge:a.shadow.default}},{variant:"shadow",color:"primary",class:{badge:a.shadow.primary}},{variant:"shadow",color:"secondary",class:{badge:a.shadow.secondary}},{variant:"shadow",color:"success",class:{badge:a.shadow.success}},{variant:"shadow",color:"warning",class:{badge:a.shadow.warning}},{variant:"shadow",color:"danger",class:{badge:a.shadow.danger}},{variant:"flat",color:"default",class:{badge:a.flat.default}},{variant:"flat",color:"primary",class:{badge:a.flat.primary}},{variant:"flat",color:"secondary",class:{badge:a.flat.secondary}},{variant:"flat",color:"success",class:{badge:a.flat.success}},{variant:"flat",color:"warning",class:{badge:a.flat.warning}},{variant:"flat",color:"danger",class:{badge:a.flat.danger}},{variant:"faded",color:"default",class:{badge:a.faded.default}},{variant:"faded",color:"primary",class:{badge:a.faded.primary}},{variant:"faded",color:"secondary",class:{badge:a.faded.secondary}},{variant:"faded",color:"success",class:{badge:a.faded.success}},{variant:"faded",color:"warning",class:{badge:a.faded.warning}},{variant:"faded",color:"danger",class:{badge:a.faded.danger}},{isOneChar:!0,size:"sm",class:{badge:"w-4 h-4 min-w-4 min-h-4"}},{isOneChar:!0,size:"md",class:{badge:"w-5 h-5 min-w-5 min-h-5"}},{isOneChar:!0,size:"lg",class:{badge:"w-6 h-6 min-w-6 min-h-6"}},{isDot:!0,size:"sm",class:{badge:"w-3 h-3 min-w-3 min-h-3"}},{isDot:!0,size:"md",class:{badge:"w-3.5 h-3.5 min-w-3.5 min-h-3.5"}},{isDot:!0,size:"lg",class:{badge:"w-4 h-4 min-w-4 min-h-4"}},{placement:"top-right",shape:"rectangle",class:{badge:"top-[5%] right-[5%] translate-x-1/2 -translate-y-1/2"}},{placement:"top-left",shape:"rectangle",class:{badge:"top-[5%] left-[5%] -translate-x-1/2 -translate-y-1/2"}},{placement:"bottom-right",shape:"rectangle",class:{badge:"bottom-[5%] right-[5%] translate-x-1/2 translate-y-1/2"}},{placement:"bottom-left",shape:"rectangle",class:{badge:"bottom-[5%] left-[5%] -translate-x-1/2 translate-y-1/2"}},{placement:"top-right",shape:"circle",class:{badge:"top-[10%] right-[10%] translate-x-1/2 -translate-y-1/2"}},{placement:"top-left",shape:"circle",class:{badge:"top-[10%] left-[10%] -translate-x-1/2 -translate-y-1/2"}},{placement:"bottom-right",shape:"circle",class:{badge:"bottom-[10%] right-[10%] translate-x-1/2 translate-y-1/2"}},{placement:"bottom-left",shape:"circle",class:{badge:"bottom-[10%] left-[10%] -translate-x-1/2 translate-y-1/2"}}]});function A(e){var t,r;const s=B(),i=(r=(t=e?.disableAnimation)!=null?t:s?.disableAnimation)!=null?r:!1,[c,o]=D(e,R.variantKeys),{as:b,children:u,className:h,content:l,classNames:g,...f}=c,p=b||"span",n=d.useMemo(()=>{var v;return((v=String(l))==null?void 0:v.length)===1||e?.isOneChar},[l,e?.isOneChar]),w=d.useMemo(()=>{var v;return((v=String(l))==null?void 0:v.length)===0},[l]),m=S(g?.badge,h),x=d.useMemo(()=>R({...o,showOutline:e?.disableOutline?!e?.disableOutline:e?.showOutline,isOneChar:n,isDot:w}),[k(o),n,w]),C=()=>({className:x.badge({class:m}),"data-invisible":e.isInvisible,...f});return{Component:p,children:u,content:l,slots:x,classNames:g,disableAnimation:i,isInvisible:e?.isInvisible,getBadgeProps:C}}var N=F((e,t)=>{const{Component:r,children:s,content:i,slots:c,classNames:o,getBadgeProps:b}=A({...e});return O.jsxs("div",{className:c.base({class:o?.base}),children:[s,O.jsx(r,{ref:t,...b(),children:i})]})});N.displayName="HeroUI.Badge";var L=N;function V({hasNextPage:e,isFetchingNextPage:t,fetchNextPage:r}){const s=d.useRef(null),i=d.useRef(null);return d.useEffect(()=>{if(!e||t)return;const c=o=>{o[0].isIntersecting&&r()};return i.current&&(s.current=new IntersectionObserver(c),s.current.observe(i.current)),()=>{s.current&&s.current.disconnect()}},[e,t,r]),i}const T=({collection:e,pageSize:t=12,sort:r="created"})=>{const s=j(),i=async({pageParam:n=1})=>await y.collection(e).getList(n,t,{sort:r}),{data:c,fetchNextPage:o,hasNextPage:b,isFetchingNextPage:u,isLoading:h}=_({queryKey:[e],queryFn:i,getNextPageParam:n=>n?.page<n?.totalPages?n.page+1:void 0,staleTime:1,initialPageParam:1}),l=d.useMemo(()=>c?.pages.flatMap(n=>n.items)??[],[c]),[g,f]=d.useState(l);d.useEffect(()=>{f(l)},[l]),d.useEffect(()=>{let n=!0;return(async()=>{try{await y.collection(e).subscribe("*",m=>{n&&(console.log("Realtime event:",m.action,m.record),s.invalidateQueries({queryKey:[e]}))})}catch(m){console.error("Realtime subscription failed:",m)}})(),()=>{n=!1,y.collection(e).unsubscribe()}},[e,s]);const p=V({hasNextPage:!!b,isFetchingNextPage:u,fetchNextPage:o});return{items:g,loadMoreRef:p,isLoading:h,isFetchingNextPage:u}};export{L as b,T as u};
